services:
  auth:
    container_name: auth
    image: auth
    build:
      dockerfile: ./Dockerfile
      context: ./auth
    ports:
      - 3001:3000
    environment:
      - DB_TYPE=postgres
      - DB_SCHEMA=public
      - PG_HOST=postgres
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=postgres
      - PG_PORT=5432
    networks:
      - backend_network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - postgres
   
  crud:
    container_name: crud
    image: crud
    build:
      dockerfile: ./Dockerfile
      context: ./crud
    ports:
      - 3002:3000
    environment:
      - DB_TYPE=postgres
      - DB_SCHEMA=public
      - PG_HOST=postgres
      - PG_USER=postgres
      - PG_PASSWORD=postgres
      - PG_DB=postgres
      - PG_PORT=5432
    networks:
      - backend_network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    depends_on:
      - postgres

  postgres:
    container_name: apex_labs
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - backend_network
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data

networks:
  backend_network:
    driver: bridge

volumes:
  postgres_data: {}